
R version 4.0.2 (2020-06-22) -- "Taking Off Again"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-conda_cos6-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> 
> library(data.table)

Attaching package: ‘data.table’

The following objects are masked from ‘package:dplyr’:

    between, first, last

Warning message:
package ‘data.table’ was built under R version 4.0.3 
> 
> library(MixAll)
Loading required package: rtkore
Loading required package: Rcpp

Attaching package: ‘rtkore’

The following object is masked from ‘package:Rcpp’:

    LdFlags

Warning message:
package ‘Rcpp’ was built under R version 4.0.3 
> 
> # This takes care of changing path names depending on whether working on ultra or not.
> # If working on ultra, set ultra==True
> 
> ultra <- TRUE
> 
> if (ultra == TRUE){
+   
+   root <- '/home/u034/'
+ } else {
+   
+   root <- 'Y:/'
+ }
> 
> 
> 
> data <- fread( paste( root, 'shared/data/wp-5/clinical_imputation/cleanData.csv', sep=''), data.table=FALSE)
> 
> # catVars is a list of variables that are categorical.
> 
> catVars <- c('sex', 'ethnicity', 'infect_cmtrt', 'chrincard', 'chronicpul_mhyn', 'asthma_mhyn', 'renal_mhyn', 'modliv',           
+              'diabetescom_mhyn', 'diabetes_mhyn', 'dementia_mhyn', 'malignantneo_mhyn', 'obesity_mhyn' )
> 
> # Rename rows by subjid, and drop subjid column
> 
> rownames(data) <- data$subjid
> 
> data$subjid <- NULL
> 
> # z- score normalise data
> 
> data <- as.data.frame(scale(data) )
> 
> 
> 
> # Format categorical varaiables as factors
> 
> data[catVars] <- lapply(data[catVars], factor )
> 
> sapply(data, class)
                    sex            temp_vsorres              hr_vsorres 
               "factor"               "numeric"               "numeric" 
             rr_vsorres           sysbp_vsorres admission_diabp_vsorres 
              "numeric"               "numeric"               "numeric" 
              chrincard         chronicpul_mhyn             asthma_mhyn 
               "factor"                "factor"                "factor" 
             renal_mhyn                  modliv       malignantneo_mhyn 
               "factor"                "factor"                "factor" 
           obesity_mhyn        diabetescom_mhyn           diabetes_mhyn 
               "factor"                "factor"                "factor" 
          dementia_mhyn            infect_cmtrt      daily_lymp_lborres 
               "factor"                "factor"               "numeric" 
   daily_neutro_lborres       daily_plt_lborres       daily_bun_lborres 
              "numeric"               "numeric"               "numeric" 
    daily_creat_lborres       daily_crp_lborres         onset2admission 
              "numeric"               "numeric"               "numeric" 
                    age               ethnicity                    sao2 
              "numeric"                "factor"               "numeric" 
                   fio2                     SFR 
              "numeric"               "numeric" 
> 
> # Separate dataset into continuous and categorical variables. Needed for mixed clustering methods
> 
> dataCat <- data[catVars]
> 
> dataCont <- data[!colnames(data) %in% catVars]
> 
> nonCatVars = colnames(dataCont)
> 
> 
> # Create parameters for clustering
> 
> dataList = list(dataCat, dataCont)
> 
> models = c("categorical_pk_pjk","gaussian_pk_sjk")
> 
> 
> mixedClustering <- clusterMixedData( dataList, models, nbCluster=5, strategy = clusterSemiSEMStrategy(), criterion = 'BIC' )
> 
> # Save the clustering object
> 
> save(mixedClustering, file = paste( root,'stevenkerr/Git/wp5-clustering/Code/clinical/clustering.RData', sep='') )
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
> 
